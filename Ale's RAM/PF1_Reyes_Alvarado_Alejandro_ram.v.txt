 module ram512x8(output reg [31:0] DataOut, input ReadWrite, Enable,input[7:0] Address, 
				 input[31:0] DataIn,
				 input [5:0] OP //gives word type (byte, halfword, word)
				 ); 
	reg[7:0] Mem[0:511]; //512 bytes of memory total
	always @(posedge Enable, Address, ReadWrite)
		begin
			if(Enable)
			begin
				if(ReadWrite) begin //Read
					case(OP)
					//Word (32bits)
						6'b100011:begin
							DataOut[31:24] <= Mem[Address];
							DataOut[23:16] <= Mem[Address+1];
							DataOut[15:8]  <= Mem[Address+2];
							DataOut[7:0]   <= Mem[Address+3];
							end
					//Unsigned Half-Word (16 bits)
						6'b100101:begin
							DataOut[31:16]  <= 16'h0000; //16 bits zeroes
							DataOut[15:8]  <= Mem[Address];
							DataOut[7:0]   <= Mem[Address+1];
							end
					//Unsigned Byte (8 bits)
						6'b100100:begin
							DataOut[31:8]  <= 24'h000000; //24 bits zeroes
							DataOut[7:0]    <= Mem[Address];	
						end
					endcase
					end
				else //Write
				begin
					case(OP)
					//Word (32bits)
						6'b101011:begin //OP code
							Mem[Address] <= DataIn[31:24];
							Mem[Address+1] <= DataIn[23:16];
							Mem[Address+2] <= DataIn[15:8];
							Mem[Address+1] <= DataIn[7:0];
						end
							 
					//Half-Word	(16bits)
						6'b101001:begin
							Mem[Address] <= DataIn[15:8];
							Mem[Address+1] <= DataIn[7:0];
						end
					//Byte (8 bits)
						6'b101000:begin
							Mem[Address] = DataIn[7:0];
						end
					endcase	
				end
			end
		end
endmodule



module RAM_Access;
	integer fi, fo, code, i; reg [31:0] data;
	reg Enable, ReadWrite; reg [31:0] DataIn;
	reg [7:0] Address; wire [31:0] DataOut; output reg [5:0] OP;

	
	ram512x8 ram1 (DataOut, ReadWrite, Enable, Address, DataIn, OP);
		
	initial begin
		fi = $fopen("s.txt","r");
		Address =  9'b000000000;
		while (!$feof(fi)) begin
		code = $fscanf(fi, "%d", data);
		ram1.Mem[Address] = data;
		Address = Address + 1;

		end
		$fclose(fi);
	end
	initial begin
		OP =6'b100011;
		Enable = 1'b0; ReadWrite = 1'b1;
		Address = #1  9'b000000000;
		repeat (10) begin
		#5 Enable = 1'b1;
		#5 Enable = 1'b0;
		begin
			case(OP)
				6'b100011:begin
					Address = Address + 4;
				end
				6'b100101:begin
					Address = Address + 2;
				end
				6'b100100:begin
					Address = Address + 1;
				end
			endcase
		end
		end
		$finish;
	end
	always @ (posedge Enable)
	begin
	#1;
	$display(" data en %d = %b %d", Address, DataOut, $time);
	end
endmodule